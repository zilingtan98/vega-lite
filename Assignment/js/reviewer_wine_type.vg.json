{
    "$schema": "https://vega.github.io/schema/vega/v5.2.json",
    "height": 600,
    "width": 650,
    "title": {
      "text": "Connection between Music Genres and Topic of Lyrics Based on Streams",
      "align": "center",
      "encode": {
        "title": {
          "enter": {
            "fill": {"value": "black"}
          }
        }
      }
    },
    "data": [
      {
        "name": "rawData",
        "url": "https://raw.githubusercontent.com/im30805/FIT3179/main/spotify_sankey_alluvial_key_data.json",
        "transform": [
          {"type": "formula", "expr": "datum.genre", "as": "genre_stack"},
          {"type": "formula", "expr": "datum.lda_topic", "as": "lda_topic_stack"},
          {"type": "formula", "expr": "datum.streams", "as": "size"}
        ],
        "format": {
          "type": "json",
          "parse": {
            "key": "string",
            "genre": "string", 
            "lda_topic": "string",
            "streams": "number"
          }
        }
      },
      {
        "name": "nodes",
        "source": "rawData",
        "transform": [
          {
            "type": "filter",
            "expr": "!groupSelector || groupSelector.genre_stack == datum.genre_stack || groupSelector.lda_topic_stack == datum.lda_topic_stack"
          },
          {"type": "formula", "expr": "datum.genre_stack+datum.lda_topic_stack", "as": "key"},
          {"type": "fold", "fields": ["genre_stack", "lda_topic_stack"], "as": ["stack", "grpId"]},
          {
            "type": "formula",
            "expr": "datum.stack == 'genre_stack' ? datum.genre_stack+' '+datum.lda_topic_stack : datum.lda_topic_stack+' '+datum.genre_stack",
            "as": "sortField"
          },
          {
            "type": "stack",
            "groupby": ["stack"],
            "sort": {"field": "sortField", "order": "descending"},
            "field": "size"
          },
          {"type": "formula", "expr": "(datum.y0+datum.y1)/2", "as": "yc"}
        ]
      },
      {
        "name": "groups",
        "source": "nodes",
        "transform": [
          {
            "type": "aggregate",
            "groupby": ["stack", "grpId"],
            "fields": ["size"],
            "ops": ["sum"],
            "as": ["total"]
          },
          {
            "type": "stack",
            "groupby": ["stack"],
            "sort": {"field": "grpId", "order": "descending"},
            "field": "total"
          },
          {"type": "formula", "expr": "scale('y', datum.y0)", "as": "scaledY0"},
          {"type": "formula", "expr": "scale('y', datum.y1)", "as": "scaledY1"},
          {
            "type": "formula",
            "expr": "datum.stack == 'genre_stack'",
            "as": "rightLabel"
          },
          {
            "type": "formula",
            "expr": "datum.total/domain('y')[1]",
            "as": "percentage"
          }
        ]
      },
      {
        "name": "destinationNodes",
        "source": "nodes",
        "transform": [{"type": "filter", "expr": "datum.stack == 'lda_topic_stack'"}]
      },
      {
        "name": "edges",
        "source": "nodes",
        "transform": [
          {"type": "filter", "expr": "datum.stack == 'genre_stack'"},
          {
            "type": "lookup",
            "from": "destinationNodes",
            "key": "key",
            "fields": ["key"],
            "as": ["target"]
          },
          {
            "type": "linkpath",
            "orient": "horizontal",
            "shape": "diagonal",
            "sourceY": {"expr": "scale('y', datum.yc)"},
            "sourceX": {"expr": "scale('x', 'genre_stack') + bandwidth('x')"},
            "targetY": {"expr": "scale('y', datum.target.yc)"},
            "targetX": {"expr": "scale('x', 'lda_topic_stack')"}
          },
          {
            "type": "formula",
            "expr": "range('y')[0]-scale('y', datum.size)",
            "as": "strokeWidth"
          },
          {
            "type": "formula",
            "expr": "datum.size/domain('y')[1]",
            "as": "percentage"
          }
        ]
      }
    ],
    "scales": [
      {
        "name": "x",
        "type": "band",
        "range": "width",
        "domain": ["genre_stack", "lda_topic_stack"],
        "paddingOuter": 0.05,
        "paddingInner": 0.95
      },
      {
        "name": "y",
        "type": "linear",
        "range": "height",
        "domain": {"data": "nodes", "field": "y1"}
      },
      {
        "name": "color",
        "type": "ordinal",
        "range": {"scheme": "tableau20"},
        "domain": {"data": "rawData", "fields": ["genre_stack", "lda_topic_stack"]}
      },
      {
        "name": "stackNames",
        "type": "ordinal",
        "range": ["Genre", "LDA Topic"],
        "domain": ["genre_stack", "lda_topic_stack"]
      }
    ],
    "axes": [
      {
        "orient": "bottom",
        "scale": "x",
        "encode": {
          "labels": {
            "update": {"text": {"scale": "stackNames", "field": "value"}}
          }
        },
        "labelColor": "black",
        "labelFontWeight": "bold"
      }
    ],
    "marks": [
      {
        "type": "path",
        "name": "edgeMark",
        "from": {"data": "edges"},
        "clip": true,
        "encode": {
          "update": {
            "stroke": [
              {
                "test": "groupSelector && groupSelector.stack=='genre_stack'",
                "scale": "color",
                "field": "lda_topic_stack"
              },
              {"scale": "color", "field": "genre_stack"}
            ],
            "strokeWidth": {"field": "strokeWidth"},
            "path": {"field": "path"},
            "strokeOpacity": {
              "signal": "!groupSelector && (groupHover.genre_stack == datum.genre_stack || groupHover.lda_topic_stack == datum.lda_topic_stack) ? 0.3 : 0.9"
            },
            "zindex": {
              "signal": "!groupSelector && (groupHover.genre_stack == datum.genre_stack || groupHover.lda_topic_stack == datum.lda_topic_stack) ? 1 : 0"
            },
            "tooltip": {
              "signal": "datum.genre_stack + ' â†’ ' + datum.lda_topic_stack + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'"
            }
          },
          "hover": {"strokeOpacity": {"value": 1}}
        }
      },
      {
        "type": "rect",
        "name": "groupMark",
        "from": {"data": "groups"},
        "encode": {
          "enter": {
            "fill": {"scale": "color", "field": "grpId"},
            "width": {"scale": "x", "band": 1}
          },
          "update": {
            "x": {"scale": "x", "field": "stack"},
            "y": {"field": "scaledY0"},
            "y2": {"field": "scaledY1"},
            "fillOpacity": {"value": 0.6},
            "tooltip": {
              "signal": "datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'"
            }
          },
          "hover": {"fillOpacity": {"value": 1}}
        }
      },
      {
        "type": "text",
        "from": {"data": "groups"},
        "interactive": false,
        "encode": {
          "update": {
            "x": {
              "signal": "scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)"
            },
            "yc": {"signal": "(datum.scaledY0 + datum.scaledY1)/2"},
            "align": {"signal": "datum.rightLabel ? 'left' : 'right'"},
            "baseline": {"value": "middle"},
            "stroke": {"value": "black"},
            "fontWeight": {"value": "lighter"},
            "text": {
              "signal": "abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''"
            }
          }
        }
      },
      {
        "type": "group",
        "data": [
          {
            "name": "dataForShowAll",
            "values": [{}],
            "transform": [{"type": "filter", "expr": "groupSelector"}]
          }
        ],
        "encode": {
          "enter": {
            "xc": {"signal": "width/2"},
            "y": {"value": 30},
            "width": {"value": 80},
            "height": {"value": 30}
          }
        },
        "marks": [
          {
            "type": "group",
            "name": "groupReset",
            "from": {"data": "dataForShowAll"},
            "encode": {
              "enter": {
                "cornerRadius": {"value": 6},
                "fill": {"value": "#f5f5f5"},
                "stroke": {"value": "#c1c1c1"},
                "strokeWidth": {"value": 2},
                "height": {"field": {"group": "height"}},
                "width": {"field": {"group": "width"}}
              },
              "update": {"opacity": {"value": 1}},
              "hover": {"opacity": {"value": 0.7}}
            },
            "marks": [
              {
                "type": "text",
                "interactive": false,
                "encode": {
                  "enter": {
                    "xc": {"field": {"group": "width"}, "mult": 0.5},
                    "yc": {
                      "field": {"group": "height"},
                      "mult": 0.5,
                      "offset": 2
                    },
                    "align": {"value": "center"},
                    "baseline": {"value": "middle"},
                    "fontWeight": {"value": "bold"},
                    "text": {"value": "Show All"}
                  }
                }
              }
            ]
          }
        ]
      },
      {
        "type": "rect",
        "from": {"data": "nodes"},
        "encode": {
          "enter": {
            "stroke": {"value": "black"},
            "strokeWidth": {"value": 0.2},
            "width": {"scale": "x", "band": 1},
            "x": {"scale": "x", "field": "stack"},
            "y": {"field": "y0", "scale": "y"},
            "y2": {"field": "y1", "scale": "y"}
          }
        }
      }
    ],
    "signals": [
      {
        "name": "groupHover",
        "value": {},
        "on": [
          {
            "events": "@groupMark:mouseover",
            "update": "{genre_stack:datum.stack=='genre_stack' && datum.grpId, lda_topic_stack:datum.stack=='lda_topic_stack' && datum.grpId}"
          },
          {"events": "mouseout", "update": "{}"}
        ]
      },
      {
        "name": "groupSelector",
        "value": false,
        "on": [
          {
            "events": "@groupMark:click!",
            "update": "{stack:datum.stack, genre_stack:datum.stack=='genre_stack' && datum.grpId, lda_topic_stack:datum.stack=='lda_topic_stack' && datum.grpId}"
          },
          {
            "events": [
              {"type": "click", "markname": "groupReset"},
              {"type": "dblclick"}
            ],
            "update": "false"
          }
        ]
      }
    ]
  }